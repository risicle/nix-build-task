resources:
  - name: nix-build-task-git
    type: git
    source:
      uri: https://github.com/risicle/nix-build-task.git
      branch: master
  - name: nix-build-task-pipeline-git
    type: git
    source:
      uri: https://github.com/risicle/nix-build-task.git
      branch: master
      paths:
        - ci/
  - name: nix-build-task-dockerhub
    type: registry-image
    source:
      repository: risicle/nix-build-task
      username: ((dockerhub-username))
      password: ((dockerhub-password))

jobs:
  - name: update-pipeline
    serial: true
    plan:
    - get: nix-build-task-pipeline-git
      trigger: true
    - set_pipeline: nix-build-task-build
      file: nix-build-task-pipeline-git/ci/build.yml

  - name: bootstrap-image
    serial: true
    plan:
      - get: nix-build-task-git
        trigger: true
      - task: stage-0-build
        output_mapping:
          output: stage-0-image
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: nixos/nix
          inputs:
            - name: nix-build-task-git
          outputs:
            - name: output
          run:
            path: /bin/ash
            args:
              - -e
              - -c
              - |
                nix-channel --add https://nixos.org/channels/nixos-20.09 nixpkgs
                nix-channel --update
                SKOPEO=$(nix-build '<nixpkgs>' -A skopeo)/bin/skopeo
                OCI_IMAGE_TOOL=$(nix-build '<nixpkgs>' -A oci-image-tool)/bin/oci-image-tool
                JQ=$(nix-build '<nixpkgs>' -A jq)/bin/jq

                nix-build nix-build-task-git -A image
                gzip -dc result > output/image.tar
                $SKOPEO inspect docker-archive:output/image.tar > image.json
                $JQ '.Digest' image.json > output/digest
                $JQ '{env: .Env, user: .User}' image.json > output/metadata.json
                $SKOPEO --insecure-policy copy docker-archive:output/image.tar oci:oci_dir:latest
                $OCI_IMAGE_TOOL unpack oci_dir output/rootfs --ref name=latest

      - task: stage-1-build
        image: stage-0-image
        output_mapping:
          output0: stage-1-image
        config:
          platform: linux
          inputs:
            - name: nix-build-task-git
          outputs:
            - name: output0
          params:
            NIXFILE: nix-build-task-git
            ATTR0: image
            OUTPUT0_PREPARE_IMAGE: 1
          run:
            path: /bin/build

      - put: nix-build-task-dev-dockerhub
        params:
          image: stage-1-image/image.tar
